from fastapi import FastAPI, HTTPException
import requests
import time
from collections import deque

app = FastAPI()

WINDOW_SIZE = 10
NUMBER_APIS = {
    "p": "http://20.244.56.144/test/primes",
    "f": "http://20.244.56.144/test/fibo",
    "e": "http://20.244.56.144/test/even",
    "r": "http://20.244.56.144/test/rand"
}

window = deque(maxlen=WINDOW_SIZE)

def fetch_numbers(url: str):
    try:
        start_time = time.time()
        response = requests.get(url, timeout=0.5)
        if response.status_code == 200 and (time.time() - start_time) <= 0.5:
            return response.json().get("numbers", [])
    except requests.exceptions.RequestException:
        pass
    return []

@app.get("/numbers/{number_id}")
def get_numbers(number_id: str):
    if number_id not in NUMBER_APIS:
        raise HTTPException(status_code=400, detail="Invalid number ID")
    
    new_numbers = fetch_numbers(NUMBER_APIS[number_id])
    unique_numbers = [num for num in new_numbers if num not in window]
    prev_state = list(window)
    
    for num in unique_numbers:
        if len(window) == WINDOW_SIZE:
            window.popleft()
        window.append(num)
    
    avg = round(sum(window) / len(window), 2) if window else 0.0
    return {
        "windowPrevState": prev_state,
        "windowCurrState": list(window),
        "numbers": new_numbers,
        "avg": avg
    }


## Test Case 1

Request:
GET http://localhost:9876/numbers/e

Response:
{
  "windowPrevState": [],
  "windowCurrState": [8, 10, 12, 14, 16, 18, 20, 22, 24, 26],
  "numbers": [8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34],
  "avg": 16.0
}

## Test Case 2

Request:
GET http://localhost:9876/numbers/p

Response:
json
{
  "windowPrevState": [8, 10, 12, 14, 16, 18, 20, 22, 24, 26],
  "windowCurrState": [10, 12, 14, 16, 18, 20, 22, 24, 26, 2],
  "numbers": [2, 3, 5, 7, 11],
  "avg": 15.4
}

## Test Case 3

Request:
GET http://localhost:9876/numbers/r

Response:
{
  "windowPrevState": [10, 12, 14, 16, 18, 20, 22, 24, 26, 2],
  "windowCurrState": [12, 14, 16, 18, 20, 22, 24, 26, 2, 19],
  "numbers": [2, 19, 25, 7, 4, 24, 17, 27, 30, 21, 14, 10, 23],
  "avg": 17.3
}
